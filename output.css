/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
  --mainBg: 208, 199, 184;
  /* #D0C7B8 */
  --lightBg: 217, 217, 217;
  /* ##D9D9D9 */
  --dark: 46, 46, 45;
  /* #2E2E2D */
  --font1: 188, 183, 181;
  /* #BCB7B5 */
  --font2: 162, 160, 115;
  /* #a2a073 */
  --cardBg: 87, 92, 74;
  /* #575C4A */
  --light: 222, 221, 220;
  /* #DEDDDC */
  --extraLight: 241, 241, 241;
  /* #F1F1F1 */
  --iconBg: 203, 200, 199;
  /* #cbc8c7 */
  --personCardBg: 241, 241, 241;
  /* #F1F1F1 */
  --personalCardInnerBg: 188, 188, 187;
  /* #BCBCBB */
  --cardW: 380px;
  --directionsColor1: 136, 123, 108;
  /* #887B6C */
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.\!container {
  width: 100% !important;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .\!container {
    max-width: 640px !important;
  }

  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .\!container {
    max-width: 768px !important;
  }

  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .\!container {
    max-width: 1024px !important;
  }

  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .\!container {
    max-width: 1280px !important;
  }

  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .\!container {
    max-width: 1536px !important;
  }

  .container {
    max-width: 1536px;
  }
}

.text50 {
  line-height: 50px;
  font-size: 50px;
}

.text45 {
  line-height: 45px;
  font-size: 45px;
}

.text40 {
  line-height: 40px;
  font-size: 40px;
}

.text30 {
  line-height: 30px;
  font-size: 30px;
}

.text28 {
  line-height: 28px;
  font-size: 28px;
}

.text26 {
  line-height: 26px;
  font-size: 26px;
}

.text22 {
  line-height: 22px;
  font-size: 22px;
}

.text20 {
  line-height: 20px;
  font-size: 20px;
}

.text19 {
  line-height: 19px;
  font-size: 19px;
}

.text18 {
  line-height: 18px;
  font-size: 18px;
}

.text16 {
  line-height: 16px;
  font-size: 16px;
}

.text15 {
  line-height: 15px;
  font-size: 15px;
}

.text14 {
  line-height: 14px;
  font-size: 14px;
}

.text13 {
  line-height: 13px;
  font-size: 13px;
}

.text12 {
  line-height: 12px;
  font-size: 12px;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.-inset-1 {
  inset: -0.25rem;
}

.-right-3 {
  right: -0.75rem;
}

.bottom-0 {
  bottom: 0px;
}

.bottom-5 {
  bottom: 1.25rem;
}

.left-0 {
  left: 0px;
}

.left-1\/2 {
  left: 50%;
}

.left-5 {
  left: 1.25rem;
}

.left-full {
  left: 100%;
}

.right-0 {
  right: 0px;
}

.top-0 {
  top: 0px;
}

.top-1 {
  top: 0.25rem;
}

.top-\[-240px\] {
  top: -240px;
}

.top-\[22px\] {
  top: 22px;
}

.isolate {
  isolation: isolate;
}

.isolation-auto {
  isolation: auto;
}

.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-40 {
  z-index: 40;
}

.order-1 {
  order: 1;
}

.order-2 {
  order: 2;
}

.order-3 {
  order: 3;
}

.float-start {
  float: inline-start;
}

.float-end {
  float: inline-end;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.float-none {
  float: none;
}

.clear-start {
  clear: inline-start;
}

.clear-end {
  clear: inline-end;
}

.clear-left {
  clear: left;
}

.clear-right {
  clear: right;
}

.clear-both {
  clear: both;
}

.clear-none {
  clear: none;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mb-20 {
  margin-bottom: 5rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mb-\[100px\] {
  margin-bottom: 100px;
}

.mb-\[10px\] {
  margin-bottom: 10px;
}

.mb-\[120px\] {
  margin-bottom: 120px;
}

.mb-\[139px\] {
  margin-bottom: 139px;
}

.mb-\[155px\] {
  margin-bottom: 155px;
}

.mb-\[18px\] {
  margin-bottom: 18px;
}

.mb-\[30px\] {
  margin-bottom: 30px;
}

.mb-\[50px\] {
  margin-bottom: 50px;
}

.mb-\[55px\] {
  margin-bottom: 55px;
}

.mb-\[60px\] {
  margin-bottom: 60px;
}

.mb-\[6px\] {
  margin-bottom: 6px;
}

.mb-\[90px\] {
  margin-bottom: 90px;
}

.mb-\[98px\] {
  margin-bottom: 98px;
}

.ml-5 {
  margin-left: 1.25rem;
}

.ml-\[15px\] {
  margin-left: 15px;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-\[30px\] {
  margin-top: 30px;
}

.mt-\[70px\] {
  margin-top: 70px;
}

.box-border {
  box-sizing: border-box;
}

.box-content {
  box-sizing: content-box;
}

.line-clamp-none {
  overflow: visible;
  display: block;
  -webkit-box-orient: horizontal;
  -webkit-line-clamp: none;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.inline-table {
  display: inline-table;
}

.table-caption {
  display: table-caption;
}

.table-cell {
  display: table-cell;
}

.table-column {
  display: table-column;
}

.table-column-group {
  display: table-column-group;
}

.table-footer-group {
  display: table-footer-group;
}

.table-header-group {
  display: table-header-group;
}

.table-row-group {
  display: table-row-group;
}

.table-row {
  display: table-row;
}

.flow-root {
  display: flow-root;
}

.grid {
  display: grid;
}

.inline-grid {
  display: inline-grid;
}

.contents {
  display: contents;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.size-\[62px\] {
  width: 62px;
  height: 62px;
}

.size-full {
  width: 100%;
  height: 100%;
}

.h-10 {
  height: 2.5rem;
}

.h-20 {
  height: 5rem;
}

.h-\[1px\] {
  height: 1px;
}

.h-\[330px\] {
  height: 330px;
}

.h-\[420px\] {
  height: 420px;
}

.h-\[53px\] {
  height: 53px;
}

.h-\[60px\] {
  height: 60px;
}

.h-full {
  height: 100%;
}

.h-\[300px\] {
  height: 300px;
}

.h-\[600px\] {
  height: 600px;
}

.\!w-full {
  width: 100% !important;
}

.w-\[120px\] {
  width: 120px;
}

.w-\[130px\] {
  width: 130px;
}

.w-\[142px\] {
  width: 142px;
}

.w-\[150px\] {
  width: 150px;
}

.w-\[185px\] {
  width: 185px;
}

.w-\[230px\] {
  width: 230px;
}

.w-\[260px\] {
  width: 260px;
}

.w-\[this-is\\\\\] {
  width: this-is\\;
}

.w-\[this-is\] {
  width: this-is;
}

.w-\[weird-and-invalid\] {
  width: weird-and-invalid;
}

.w-full {
  width: 100%;
}

.max-w-\[1160px\] {
  max-width: 1160px;
}

.max-w-\[500px\] {
  max-width: 500px;
}

.flex-shrink {
  flex-shrink: 1;
}

.shrink {
  flex-shrink: 1;
}

.shrink-0 {
  flex-shrink: 0;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.basis-\[500px\] {
  flex-basis: 500px;
}

.table-auto {
  table-layout: auto;
}

.table-fixed {
  table-layout: fixed;
}

.caption-top {
  caption-side: top;
}

.caption-bottom {
  caption-side: bottom;
}

.border-collapse {
  border-collapse: collapse;
}

.border-separate {
  border-collapse: separate;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\!transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-cpu {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-gpu {
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-none {
  transform: none;
}

.cursor-pointer {
  cursor: pointer;
}

.touch-auto {
  touch-action: auto;
}

.touch-none {
  touch-action: none;
}

.touch-pan-x {
  --tw-pan-x: pan-x;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-left {
  --tw-pan-x: pan-left;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-right {
  --tw-pan-x: pan-right;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-y {
  --tw-pan-y: pan-y;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-up {
  --tw-pan-y: pan-up;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-down {
  --tw-pan-y: pan-down;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pinch-zoom {
  --tw-pinch-zoom: pinch-zoom;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-manipulation {
  touch-action: manipulation;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.select-text {
  -webkit-user-select: text;
     -moz-user-select: text;
          user-select: text;
}

.select-all {
  -webkit-user-select: all;
     -moz-user-select: all;
          user-select: all;
}

.select-auto {
  -webkit-user-select: auto;
     -moz-user-select: auto;
          user-select: auto;
}

.resize-none {
  resize: none;
}

.resize-y {
  resize: vertical;
}

.resize-x {
  resize: horizontal;
}

.resize {
  resize: both;
}

.snap-none {
  scroll-snap-type: none;
}

.snap-x {
  scroll-snap-type: x var(--tw-scroll-snap-strictness);
}

.snap-y {
  scroll-snap-type: y var(--tw-scroll-snap-strictness);
}

.snap-both {
  scroll-snap-type: both var(--tw-scroll-snap-strictness);
}

.snap-mandatory {
  --tw-scroll-snap-strictness: mandatory;
}

.snap-proximity {
  --tw-scroll-snap-strictness: proximity;
}

.snap-start {
  scroll-snap-align: start;
}

.snap-end {
  scroll-snap-align: end;
}

.snap-center {
  scroll-snap-align: center;
}

.snap-align-none {
  scroll-snap-align: none;
}

.snap-normal {
  scroll-snap-stop: normal;
}

.snap-always {
  scroll-snap-stop: always;
}

.list-inside {
  list-style-position: inside;
}

.list-outside {
  list-style-position: outside;
}

.list-disc {
  list-style-type: disc;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.appearance-auto {
  -webkit-appearance: auto;
     -moz-appearance: auto;
          appearance: auto;
}

.break-before-auto {
  -moz-column-break-before: auto;
       break-before: auto;
}

.break-before-avoid {
  -moz-column-break-before: avoid;
       break-before: avoid;
}

.break-before-all {
  -moz-column-break-before: all;
       break-before: all;
}

.break-before-avoid-page {
  -moz-column-break-before: avoid;
       break-before: avoid-page;
}

.break-before-page {
  -moz-column-break-before: page;
       break-before: page;
}

.break-before-left {
  -moz-column-break-before: left;
       break-before: left;
}

.break-before-right {
  -moz-column-break-before: right;
       break-before: right;
}

.break-before-column {
  -moz-column-break-before: column;
       break-before: column;
}

.break-inside-auto {
  -moz-column-break-inside: auto;
       break-inside: auto;
}

.break-inside-avoid {
  -moz-column-break-inside: avoid;
       break-inside: avoid;
}

.break-inside-avoid-page {
  break-inside: avoid-page;
}

.break-inside-avoid-column {
  -moz-column-break-inside: avoid;
       break-inside: avoid-column;
}

.break-after-auto {
  -moz-column-break-after: auto;
       break-after: auto;
}

.break-after-avoid {
  -moz-column-break-after: avoid;
       break-after: avoid;
}

.break-after-all {
  -moz-column-break-after: all;
       break-after: all;
}

.break-after-avoid-page {
  -moz-column-break-after: avoid;
       break-after: avoid-page;
}

.break-after-page {
  -moz-column-break-after: page;
       break-after: page;
}

.break-after-left {
  -moz-column-break-after: left;
       break-after: left;
}

.break-after-right {
  -moz-column-break-after: right;
       break-after: right;
}

.break-after-column {
  -moz-column-break-after: column;
       break-after: column;
}

.grid-flow-row {
  grid-auto-flow: row;
}

.grid-flow-col {
  grid-auto-flow: column;
}

.grid-flow-dense {
  grid-auto-flow: dense;
}

.grid-flow-row-dense {
  grid-auto-flow: row dense;
}

.grid-flow-col-dense {
  grid-auto-flow: column dense;
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.place-content-center {
  place-content: center;
}

.place-content-start {
  place-content: start;
}

.place-content-end {
  place-content: end;
}

.place-content-between {
  place-content: space-between;
}

.place-content-around {
  place-content: space-around;
}

.place-content-evenly {
  place-content: space-evenly;
}

.place-content-baseline {
  place-content: baseline;
}

.place-content-stretch {
  place-content: stretch;
}

.place-items-start {
  place-items: start;
}

.place-items-end {
  place-items: end;
}

.place-items-center {
  place-items: center;
}

.place-items-baseline {
  place-items: baseline;
}

.place-items-stretch {
  place-items: stretch;
}

.content-normal {
  align-content: normal;
}

.content-center {
  align-content: center;
}

.content-start {
  align-content: flex-start;
}

.content-end {
  align-content: flex-end;
}

.content-between {
  align-content: space-between;
}

.content-around {
  align-content: space-around;
}

.content-evenly {
  align-content: space-evenly;
}

.content-baseline {
  align-content: baseline;
}

.content-stretch {
  align-content: stretch;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.justify-normal {
  justify-content: normal;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

.gap-10 {
  gap: 2.5rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-5 {
  gap: 1.25rem;
}

.gap-\[10px\] {
  gap: 10px;
}

.gap-\[30px\] {
  gap: 30px;
}

.gap-\[6px\] {
  gap: 6px;
}

.gap-x-\[10px\] {
  -moz-column-gap: 10px;
       column-gap: 10px;
}

.gap-y-5 {
  row-gap: 1.25rem;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 1;
}

.space-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 1;
}

.divide-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 1;
}

.divide-solid > :not([hidden]) ~ :not([hidden]) {
  border-style: solid;
}

.divide-dashed > :not([hidden]) ~ :not([hidden]) {
  border-style: dashed;
}

.divide-dotted > :not([hidden]) ~ :not([hidden]) {
  border-style: dotted;
}

.divide-double > :not([hidden]) ~ :not([hidden]) {
  border-style: double;
}

.divide-none > :not([hidden]) ~ :not([hidden]) {
  border-style: none;
}

.place-self-auto {
  place-self: auto;
}

.place-self-start {
  place-self: start;
}

.place-self-end {
  place-self: end;
}

.place-self-center {
  place-self: center;
}

.place-self-stretch {
  place-self: stretch;
}

.self-auto {
  align-self: auto;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.self-baseline {
  align-self: baseline;
}

.justify-self-auto {
  justify-self: auto;
}

.justify-self-start {
  justify-self: start;
}

.justify-self-end {
  justify-self: end;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-stretch {
  justify-self: stretch;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-clip {
  overflow: clip;
}

.overflow-visible {
  overflow: visible;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.overflow-x-clip {
  overflow-x: clip;
}

.overflow-y-clip {
  overflow-y: clip;
}

.overflow-x-visible {
  overflow-x: visible;
}

.overflow-y-visible {
  overflow-y: visible;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.overscroll-auto {
  overscroll-behavior: auto;
}

.overscroll-contain {
  overscroll-behavior: contain;
}

.overscroll-none {
  overscroll-behavior: none;
}

.overscroll-y-auto {
  overscroll-behavior-y: auto;
}

.overscroll-y-contain {
  overscroll-behavior-y: contain;
}

.overscroll-y-none {
  overscroll-behavior-y: none;
}

.overscroll-x-auto {
  overscroll-behavior-x: auto;
}

.overscroll-x-contain {
  overscroll-behavior-x: contain;
}

.overscroll-x-none {
  overscroll-behavior-x: none;
}

.scroll-auto {
  scroll-behavior: auto;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.overflow-ellipsis {
  text-overflow: ellipsis;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.text-clip {
  text-overflow: clip;
}

.hyphens-none {
  -webkit-hyphens: none;
          hyphens: none;
}

.hyphens-manual {
  -webkit-hyphens: manual;
          hyphens: manual;
}

.hyphens-auto {
  -webkit-hyphens: auto;
          hyphens: auto;
}

.whitespace-normal {
  white-space: normal;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.whitespace-pre {
  white-space: pre;
}

.whitespace-pre-line {
  white-space: pre-line;
}

.whitespace-pre-wrap {
  white-space: pre-wrap;
}

.whitespace-break-spaces {
  white-space: break-spaces;
}

.text-wrap {
  text-wrap: wrap;
}

.text-nowrap {
  text-wrap: nowrap;
}

.text-balance {
  text-wrap: balance;
}

.text-pretty {
  text-wrap: pretty;
}

.break-normal {
  overflow-wrap: normal;
  word-break: normal;
}

.break-words {
  overflow-wrap: break-word;
}

.break-all {
  word-break: break-all;
}

.break-keep {
  word-break: keep-all;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-\[300px\] {
  border-radius: 300px;
}

.rounded-\[30px\] {
  border-radius: 30px;
}

.rounded-\[40px\] {
  border-radius: 40px;
}

.rounded-\[42px\] {
  border-radius: 42px;
}

.rounded-\[45px\] {
  border-radius: 45px;
}

.rounded-\[50px\] {
  border-radius: 50px;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-e {
  border-start-end-radius: 0.25rem;
  border-end-end-radius: 0.25rem;
}

.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.rounded-s {
  border-start-start-radius: 0.25rem;
  border-end-start-radius: 0.25rem;
}

.rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.rounded-bl {
  border-bottom-left-radius: 0.25rem;
}

.rounded-br {
  border-bottom-right-radius: 0.25rem;
}

.rounded-ee {
  border-end-end-radius: 0.25rem;
}

.rounded-es {
  border-end-start-radius: 0.25rem;
}

.rounded-se {
  border-start-end-radius: 0.25rem;
}

.rounded-ss {
  border-start-start-radius: 0.25rem;
}

.rounded-tl {
  border-top-left-radius: 0.25rem;
}

.rounded-tr {
  border-top-right-radius: 0.25rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-x {
  border-left-width: 1px;
  border-right-width: 1px;
}

.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-e {
  border-inline-end-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-s {
  border-inline-start-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-dashed {
  border-style: dashed;
}

.border-dotted {
  border-style: dotted;
}

.border-double {
  border-style: double;
}

.border-hidden {
  border-style: hidden;
}

.border-none {
  border-style: none;
}

.border-dark {
  border-color: rgba(var(--dark));
}

.border-font2 {
  border-color: rgba(var(--font2));
}

.bg-\[rgb\(255\2c 0\2c 0\)\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 0 0 / var(--tw-bg-opacity));
}

.bg-black\/10 {
  background-color: rgb(0 0 0 / 0.1);
}

.bg-black\/20 {
  background-color: rgb(0 0 0 / 0.2);
}

.bg-black\/60 {
  background-color: rgb(0 0 0 / 0.6);
}

.bg-cardBg {
  background-color: rgba(var(--cardBg));
}

.bg-dark {
  background-color: rgba(var(--dark));
}

.bg-directionsColor1 {
  background-color: rgba(var(--directionsColor1));
}

.bg-extraLight {
  background-color: rgba(var(--extraLight));
}

.bg-font1 {
  background-color: rgba(var(--font1));
}

.bg-font2 {
  background-color: rgba(var(--font2));
}

.bg-mainBg\/20 {
  background-color: rgba(var(--mainBg), 0.2);
}

.bg-personalCardInnerBg {
  background-color: rgba(var(--personalCardInnerBg));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-\[url\(\.\/assets\/photos\/4\.png\)\] {
  background-image: url(./assets/photos/4.png);
}

.bg-cardioBg1 {
  background-image: url('./assets/cardio1.png');
}

.bg-directionsBg1 {
  background-image: url('./assets/directions1.png');
}

.bg-galleryBg1 {
  background-image: url('./assets/gallery1.png');
}

.bg-gradientCover {
  background-image: linear-gradient(0deg, rgba(46, 46, 45, 0.4) 0%, rgba(46, 46, 45, 1) 100%);
}

.bg-gym1 {
  background-image: url('./assets/gym1.jpg');
}

.bg-gym2 {
  background-image: url('./assets/gym2.jpeg');
}

.bg-mainBasicsGym1 {
  background-image: url('./assets/main-basics-1.png');
}

.bg-mainBasicsGym2 {
  background-image: url('./assets/main-basics-2.png');
}

.bg-mainBasicsGym3 {
  background-image: url('./assets/main-basics-3.png');
}

.bg-mainBasicsGym4 {
  background-image: url('./assets/main-basics-4.png');
}

.bg-priceBg1 {
  background-image: url('./assets/priceBg1.png');
}

.decoration-slice {
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.decoration-clone {
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.box-decoration-slice {
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.box-decoration-clone {
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.bg-\[size\:150\%\] {
  background-size: 150%;
}

.bg-\[size\:160\%\] {
  background-size: 160%;
}

.bg-\[size\:170\%\] {
  background-size: 170%;
}

.bg-cover {
  background-size: cover;
}

.bg-fixed {
  background-attachment: fixed;
}

.bg-local {
  background-attachment: local;
}

.bg-scroll {
  background-attachment: scroll;
}

.bg-clip-border {
  background-clip: border-box;
}

.bg-clip-padding {
  background-clip: padding-box;
}

.bg-clip-content {
  background-clip: content-box;
}

.bg-clip-text {
  -webkit-background-clip: text;
          background-clip: text;
}

.bg-\[position\:-120px_-40px\] {
  background-position: -120px -40px;
}

.bg-\[position\:-200px_0\] {
  background-position: -200px 0;
}

.bg-\[position\:-20px_-100px\] {
  background-position: -20px -100px;
}

.bg-\[position\:-30px_-55px\] {
  background-position: -30px -55px;
}

.bg-\[position\:-40px_-60px\] {
  background-position: -40px -60px;
}

.bg-\[position\:-85px_0px\] {
  background-position: -85px 0px;
}

.bg-center {
  background-position: center;
}

.bg-repeat {
  background-repeat: repeat;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.bg-repeat-x {
  background-repeat: repeat-x;
}

.bg-repeat-y {
  background-repeat: repeat-y;
}

.bg-repeat-round {
  background-repeat: round;
}

.bg-repeat-space {
  background-repeat: space;
}

.bg-origin-border {
  background-origin: border-box;
}

.bg-origin-padding {
  background-origin: padding-box;
}

.bg-origin-content {
  background-origin: content-box;
}

.fill-directionsColor1 {
  fill: rgba(var(--directionsColor1));
}

.fill-font1 {
  fill: rgba(var(--font1));
}

.fill-font2 {
  fill: rgba(var(--font2));
}

.fill-mainBg {
  fill: rgba(var(--mainBg));
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-fill {
  -o-object-fit: fill;
     object-fit: fill;
}

.object-none {
  -o-object-fit: none;
     object-fit: none;
}

.object-scale-down {
  -o-object-fit: scale-down;
     object-fit: scale-down;
}

.p-5 {
  padding: 1.25rem;
}

.p-\[10px\] {
  padding: 10px;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.px-\[105px\] {
  padding-left: 105px;
  padding-right: 105px;
}

.px-\[15px\] {
  padding-left: 15px;
  padding-right: 15px;
}

.py-20 {
  padding-top: 5rem;
  padding-bottom: 5rem;
}

.py-\[115px\] {
  padding-top: 115px;
  padding-bottom: 115px;
}

.py-\[20px\] {
  padding-top: 20px;
  padding-bottom: 20px;
}

.py-\[50px\] {
  padding-top: 50px;
  padding-bottom: 50px;
}

.\!pl-0 {
  padding-left: 0px !important;
}

.pb-20 {
  padding-bottom: 5rem;
}

.pt-20 {
  padding-top: 5rem;
}

.pt-\[50px\] {
  padding-top: 50px;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.text-start {
  text-align: start;
}

.text-end {
  text-align: end;
}

.align-baseline {
  vertical-align: baseline;
}

.align-top {
  vertical-align: top;
}

.align-middle {
  vertical-align: middle;
}

.align-bottom {
  vertical-align: bottom;
}

.align-text-top {
  vertical-align: text-top;
}

.align-text-bottom {
  vertical-align: text-bottom;
}

.align-sub {
  vertical-align: sub;
}

.align-super {
  vertical-align: super;
}

.font-euro {
  font-family: Eurofontextendedc;
}

.font-play {
  font-family: Play;
}

.text-\[50px\] {
  font-size: 50px;
}

.text-\[30px\] {
  font-size: 30px;
}

.font-bold {
  font-weight: 700;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.normal-case {
  text-transform: none;
}

.italic {
  font-style: italic;
}

.not-italic {
  font-style: normal;
}

.normal-nums {
  font-variant-numeric: normal;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.slashed-zero {
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.stacked-fractions {
  --tw-numeric-fraction: stacked-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.leading-\[14px\] {
  line-height: 14px;
}

.\!text-font2 {
  color: rgba(var(--font2)) !important;
}

.text-\[\#336699\]\/\[\.35\] {
  color: rgb(51 102 153 / .35);
}

.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.text-cardBg {
  color: rgba(var(--cardBg));
}

.text-dark {
  color: rgba(var(--dark));
}

.text-font1 {
  color: rgba(var(--font1));
}

.text-font2 {
  color: rgba(var(--font2));
}

.text-mainBg {
  color: rgba(var(--mainBg));
}

.underline {
  text-decoration-line: underline;
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.no-underline {
  text-decoration-line: none;
}

.decoration-solid {
  text-decoration-style: solid;
}

.decoration-double {
  text-decoration-style: double;
}

.decoration-dotted {
  text-decoration-style: dotted;
}

.decoration-dashed {
  text-decoration-style: dashed;
}

.decoration-wavy {
  text-decoration-style: wavy;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

.opacity-10 {
  opacity: 0.1;
}

.opacity-70 {
  opacity: 0.7;
}

.bg-blend-normal {
  background-blend-mode: normal;
}

.bg-blend-multiply {
  background-blend-mode: multiply;
}

.bg-blend-screen {
  background-blend-mode: screen;
}

.bg-blend-overlay {
  background-blend-mode: overlay;
}

.bg-blend-darken {
  background-blend-mode: darken;
}

.bg-blend-lighten {
  background-blend-mode: lighten;
}

.bg-blend-color-dodge {
  background-blend-mode: color-dodge;
}

.bg-blend-color-burn {
  background-blend-mode: color-burn;
}

.bg-blend-hard-light {
  background-blend-mode: hard-light;
}

.bg-blend-soft-light {
  background-blend-mode: soft-light;
}

.bg-blend-difference {
  background-blend-mode: difference;
}

.bg-blend-exclusion {
  background-blend-mode: exclusion;
}

.bg-blend-hue {
  background-blend-mode: hue;
}

.bg-blend-saturation {
  background-blend-mode: saturation;
}

.bg-blend-color {
  background-blend-mode: color;
}

.bg-blend-luminosity {
  background-blend-mode: luminosity;
}

.mix-blend-normal {
  mix-blend-mode: normal;
}

.mix-blend-multiply {
  mix-blend-mode: multiply;
}

.mix-blend-screen {
  mix-blend-mode: screen;
}

.mix-blend-overlay {
  mix-blend-mode: overlay;
}

.mix-blend-darken {
  mix-blend-mode: darken;
}

.mix-blend-lighten {
  mix-blend-mode: lighten;
}

.mix-blend-color-dodge {
  mix-blend-mode: color-dodge;
}

.mix-blend-color-burn {
  mix-blend-mode: color-burn;
}

.mix-blend-hard-light {
  mix-blend-mode: hard-light;
}

.mix-blend-soft-light {
  mix-blend-mode: soft-light;
}

.mix-blend-difference {
  mix-blend-mode: difference;
}

.mix-blend-exclusion {
  mix-blend-mode: exclusion;
}

.mix-blend-hue {
  mix-blend-mode: hue;
}

.mix-blend-saturation {
  mix-blend-mode: saturation;
}

.mix-blend-color {
  mix-blend-mode: color;
}

.mix-blend-luminosity {
  mix-blend-mode: luminosity;
}

.mix-blend-plus-darker {
  mix-blend-mode: plus-darker;
}

.mix-blend-plus-lighter {
  mix-blend-mode: plus-lighter;
}

.\!shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1) !important;
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.outline-dashed {
  outline-style: dashed;
}

.outline-dotted {
  outline-style: dotted;
}

.outline-double {
  outline-style: double;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-inset {
  --tw-ring-inset: inset;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.\!filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter-none {
  filter: none;
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-blur-md {
  --tw-backdrop-blur: blur(12px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-grayscale {
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-invert {
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-sepia {
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter-none {
  -webkit-backdrop-filter: none;
          backdrop-filter: none;
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.contain-none {
  contain: none;
}

.contain-content {
  contain: content;
}

.contain-strict {
  contain: strict;
}

.contain-size {
  --tw-contain-size: size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-inline-size {
  --tw-contain-size: inline-size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-layout {
  --tw-contain-layout: layout;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-paint {
  --tw-contain-paint: paint;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-style {
  --tw-contain-style: style;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.content-\[\'this-is-also-valid\]-weirdly-enough\'\] {
  --tw-content: 'this-is-also-valid]-weirdly-enough';
  content: var(--tw-content);
}

.forced-color-adjust-auto {
  forced-color-adjust: auto;
}

.forced-color-adjust-none {
  forced-color-adjust: none;
}

@font-face {
  font-family: "Eurofontextendedc";

  src: url("./assets/eurofontextendedc.otf");
}

@font-face {
  font-family: "Eurofontextendedc";

  src: url("./assets/eurofontextendedc_bold.otf");

  font-weight: bold;
}

@font-face {
  font-family: "Play";

  src: url("./assets/Play-Regular.ttf");
}

@font-face {
  font-family: "Play";

  src: url("./assets/Play-Bold.ttf");

  font-weight: bold;
}

body {
  background-image: linear-gradient(180deg, #D0C7B8 0%, rgba(188, 183, 181, 0.5) 100%);
  font-family: Eurofontextendedc;
}

main {
  margin-left: auto;
  margin-right: auto;
  display: flex;
  max-width: 1400px;
  flex-direction: column;
  gap: 15px;
  padding: 15px;
}

@media (min-width: 1024px) {
  main {
    gap: 25px;
    padding-top: 25px;
    padding-bottom: 25px;
  }
}

nav {
  height: 2.5rem;
  & .links {
    z-index: 30;
  }
  & .links {
    display: flex;
  }
  & .links {
    gap: 1.5rem;
  }
  & .links {
    font-family: Play;
  }
  & .links {
    font-weight: 700;
  }
  & .links {
    text-transform: uppercase;
  }
  @media not all and (min-width: 1024px) {
    & .links {
      line-height: 20px;
      font-size: 20px;
    }
  }
  @media (min-width: 1024px) {
    & .links {
      line-height: 14px;
      font-size: 14px;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      position: absolute;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      top: 0px;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      left: 0px;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      height: 0vh;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      width: 100%;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      flex-direction: column;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      align-items: flex-end;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      justify-content: flex-end;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      overflow: hidden;
    }
  }
  @media not all and (min-width: 1024px) {
    & .links {
      background-color: rgba(var(--mainBg));
    }
  }
  @media (min-width: 1024px) {
    & .links {
      align-items: center;
    }
  }
  & .links {
    transition: height 0.5s ease-in-out;
    height: 0;
    &.active {
      line-height: 20px;
      font-size: 20px;
    }
    &.active {
      position: fixed;
    }
    &.active {
      top: 0px;
    }
    &.active {
      left: 0px;
    }
    &.active {
      z-index: 30;
    }
    &.active {
      height: 100vh;
    }
    &.active {
      width: 100%;
    }
    &.active {
      flex-direction: column;
    }
    &.active {
      align-items: flex-end;
    }
    &.active {
      justify-content: flex-start;
    }
    &.active {
      background-color: rgba(var(--mainBg));
    }
    &.active {
      padding-top: 5rem;
      padding-bottom: 5rem;
    }
    &.active {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
    }
    &.active {
      transition: height 0.5s ease-in-out;
      height: 100vh;
      & a {
        opacity: 1;
      }
    }
    & a {
      color: rgba(var(--dark));
    }
    & a {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & a {
      transition-duration: 300ms;
    }
    @media not all and (min-width: 1024px) {
      & a {
        opacity: 0;
      }
    }
    & a {
      &:hover {
        color: rgba(var(--font2));
      }
      &:hover {
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      &:hover {
        transition-duration: 300ms;
      }
      &.active {
        color: rgba(var(--font2));
      }
      &.active {
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      &.active {
        transition-duration: 300ms;
      }
    }
  }
}

footer {
  line-height: 14px;
  font-size: 14px;
  position: relative;
  border-radius: 50px;
  background-color: rgba(var(--dark));
  padding: 35px;
  padding-top: 60px;
  font-family: Play;
  text-transform: uppercase;
  color: rgba(var(--font1));
}

@media (min-width: 1024px) {
  footer {
    line-height: 16px;
    font-size: 16px;
    padding: 60px;
  }
}

footer {
  & .icon {
    cursor: pointer;
  }
  & .icon {
    & path {
      fill: rgba(var(--font1));
    }
    & path {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & path {
      transition-duration: 300ms;
    }
    &:hover path {
      fill: rgba(var(--font2));
    }
    &:hover path {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    &:hover path {
      transition-duration: 300ms;
    }
  }
  & .inst {
    cursor: pointer;
  }
  & .inst {
    & path {
      fill: rgba(var(--dark));
    }
    & path {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & path {
      transition-duration: 300ms;
    }
    & circle {
      fill: rgba(var(--font1));
    }
    & circle {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & circle {
      transition-duration: 300ms;
    }
    &:hover circle {
      fill: rgba(var(--font2));
    }
    &:hover circle {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    &:hover circle {
      transition-duration: 300ms;
    }
  }
}

.pillBtn {
  width: -moz-fit-content;
  width: fit-content;
  border-radius: 50px;
  padding-top: 30px;
  padding-bottom: 30px;
  padding-left: 30px;
  padding-right: 30px;
  text-transform: uppercase;
}

@media not all and (min-width: 768px) {
  .pillBtn {
    font-family: Play;
  }
}

.cross {
  display: flex;
  height: 19px;
  width: 30px;
  cursor: pointer;
  flex-direction: column;
  justify-content: space-between;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 1024px) {
  .cross {
    display: none;
  }
}

.cross {
  & .line {
    height: 3px;
  }
  & .line {
    width: 100%;
  }
  & .line {
    background-color: rgba(var(--dark));
  }
  & .line {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &.active {
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &.active {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &.active {
    & .line {
      &.middle {
        opacity: 0;
      }
      &.middle {
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      &.top {
        --tw-translate-y: 0.5rem;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      &.top {
        --tw-rotate: 45deg;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      &.top {
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      &.bottom {
        --tw-translate-y: -0.5rem;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      &.bottom {
        --tw-rotate: -45deg;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      &.bottom {
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
    }
  }
}

.chatIcon {
  position: fixed;
  bottom: 0px;
  right: 0px;
  cursor: pointer;
  & circle {
    fill: rgba(var(--dark));
  }
  & circle {
    stroke: rgba(var(--font1));
  }
  & circle {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  & circle {
    transition-duration: 300ms;
  }
  & path {
    stroke: rgba(var(--font1));
  }
  & path {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  & path {
    transition-duration: 300ms;
  }
  &:hover {
    & circle {
      fill: rgba(var(--font2));
    }
    & circle {
      stroke: rgba(var(--dark));
    }
    & circle {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & circle {
      transition-duration: 300ms;
    }
    & path {
      stroke: rgba(var(--dark));
    }
    & path {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & path {
      transition-duration: 300ms;
    }
  }
}

.olived {
  background-color: rgba(var(--font2));
  color: rgba(var(--dark));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  &.bordered {
    border-width: 1px;
  }
  &.bordered {
    border-color: rgba(var(--font2));
  }
  &.bordered {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &.bordered {
    transition-duration: 300ms;
  }
  &:hover {
    background-color: rgba(var(--dark));
  }
  &:hover {
    color: rgba(var(--font2));
  }
  &:hover {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &:hover {
    transition-duration: 300ms;
  }
}

.darked {
  background-color: rgba(var(--dark));
  color: rgba(var(--extraLight));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  &.bordered {
    border-width: 1px;
  }
  &.bordered {
    border-color: rgba(var(--dark));
  }
  &.bordered {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &.bordered {
    transition-duration: 300ms;
  }
  &:hover {
    background-color: rgba(var(--font2));
  }
  &:hover {
    color: rgba(var(--dark));
  }
  &:hover {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &:hover {
    transition-duration: 300ms;
  }
}

.lightened {
  background-color: rgba(var(--mainBg));
  color: rgba(var(--dark));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  &.bordered {
    border-width: 1px;
  }
  &.bordered {
    border-color: rgba(var(--mainBg));
  }
  &.bordered {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &.bordered {
    transition-duration: 300ms;
  }
  &:hover {
    background-color: rgba(var(--dark));
  }
  &:hover {
    color: rgba(var(--mainBg));
  }
  &:hover {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &:hover {
    transition-duration: 300ms;
  }
}

.card {
  line-height: 20px;
  font-size: 20px;
  position: relative;
  display: block;
  height: 460px;
  max-width: 100%;
  flex-grow: 1;
  flex-basis: 500px;
  border-radius: 50px;
  padding-top: 5rem;
  text-align: center;
  font-weight: 700;
  text-transform: uppercase;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

@media (min-width: 1024px) {
  .card {
    width: 680px;
    height: 680px;
    padding-top: 230px;
  }
}

.basics {
  position: relative;
  display: flex;
  height: 488px;
  min-width: 310px;
  max-width: 680px;
  flex-shrink: 1;
  flex-grow: 1;
  flex-basis: 500px;
  cursor: pointer;
  flex-direction: column;
  justify-content: space-between;
  border-radius: 50px;
  padding: 10px;
  text-transform: uppercase;
  color: rgba(var(--font1));
}

@media (min-width: 1024px) {
  .basics {
    height: 430px;
  }
}

.basics {
  & .image {
    position: relative;
  }
  & .image {
    bottom: 0px;
  }
  & .image {
    height: 310px;
  }
  & .image {
    width: 100%;
  }
  & .image {
    flex-shrink: 0;
  }
  & .image {
    overflow: hidden;
  }
  & .image {
    border-radius: 42px;
  }
  & .image {
    background-repeat: no-repeat;
  }
  @media (min-width: 1024px) {
    & .image {
      height: 344px;
    }
  }
  & .text {
    display: flex;
  }
  & .text {
    height: 100%;
  }
  & .text {
    flex-direction: column;
  }
  & .text {
    align-items: center;
  }
  & .text {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
  @media not all and (min-width: 1024px) {
    & .text {
      gap: 1.25rem;
    }
  }
  @media not all and (min-width: 1024px) {
    & .text {
      padding-top: 30px;
    }
  }
  @media not all and (min-width: 768px) {
    & .text {
      text-align: center;
    }
  }
  @media (min-width: 1024px) {
    & .text {
      flex-direction: row;
    }
  }
  @media (min-width: 1024px) {
    & .text {
      padding-left: 40px;
      padding-right: 40px;
    }
  }
  & .text {
    & .first {
      line-height: 20px;
      font-size: 20px;
    }
    & .first {
      font-weight: 700;
    }
    & .second {
      line-height: 16px;
      font-size: 16px;
    }
    & .second {
      font-family: Play;
    }
    @media (min-width: 1024px) {
      & .second {
        line-height: 14px;
        font-size: 14px;
      }
    }
  }
}

.prideNumbers {
  margin-left: auto;
  margin-right: auto;
  display: flex;
  width: -moz-fit-content;
  width: fit-content;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
  text-transform: uppercase;
  & .numbers {
    position: relative;
  }
  & .numbers {
    display: flex;
  }
  & .numbers {
    height: 240px;
  }
  & .numbers {
    width: 330px;
  }
  & .numbers {
    flex-direction: column;
  }
  & .numbers {
    align-items: center;
  }
  & .numbers {
    justify-content: space-between;
  }
  & .numbers {
    overflow: hidden;
  }
  & .numbers {
    border-radius: 50px;
  }
  & .numbers {
    padding-top: 50px;
  }
  & .numbers {
    padding-bottom: 35px;
  }
  @media (min-width: 1024px) {
    & .numbers {
      width: 280px;
      height: 280px;
    }
  }
  & .numbers {
    &:nth-child(odd) {
      background-color: rgba(var(--light));
    }
    &:nth-child(odd) {
      & h1 {
        color: rgba(var(--cardBg));
      }
    }
    &:nth-child(even) {
      border-width: 1px;
    }
    &:nth-child(even) {
      border-color: rgba(var(--font2));
    }
    &:nth-child(even) {
      & h1 {
        color: rgba(var(--dark));
      }
    }
    & h1 {
      line-height: 45px;
      font-size: 45px;
    }
    & h1 {
      width: 100%;
    }
    & h1 {
      padding-left: 2rem;
    }
    & h1 {
      font-weight: 700;
    }
    & h1 {
      text-transform: lowercase;
    }
    @media (min-width: 1024px) {
      & h1 {
        line-height: 50px;
        font-size: 50px;
      }
    }
    & p {
      line-height: 18px;
      font-size: 18px;
    }
    & p {
      width: 100%;
    }
    & p {
      padding-left: 2rem;
    }
    & p {
      font-family: Play;
    }
    & p {
      text-transform: uppercase;
    }
    & p {
      color: rgba(var(--dark));
    }
    @media (min-width: 1024px) {
      & p {
        line-height: 16px;
        font-size: 16px;
      }
    }
  }
}

.additionalServices {
  padding-top: 120px;
  padding-bottom: 136px;
}

@media not all and (min-width: 1024px) {
  .additionalServices {
    margin-left: -15px;
    width: 100vw;
    background-color: rgba(var(--mainBg));
  }
}

.serviceCardContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
  & .serviceCard {
    position: relative;
  }
  & .serviceCard {
    width: 330px;
  }
  & .serviceCard {
    overflow: hidden;
  }
  & .serviceCard {
    border-radius: 50px;
  }
  & .serviceCard {
    background-color: rgba(var(--dark));
  }
  & .serviceCard {
    padding-left: 48px;
    padding-right: 48px;
  }
  & .serviceCard {
    padding-top: 110px;
  }
  & .serviceCard {
    text-transform: uppercase;
  }
  @media (min-width: 1024px) {
    & .serviceCard {
      height: 380px;
    }
  }
  @media (min-width: 1024px) {
    & .serviceCard {
      width: 446px;
    }
  }
  @media (min-width: 1024px) {
    & .serviceCard {
      padding-top: 150px;
    }
  }
  & .serviceCard {
    & .image {
      position: absolute;
    }
    & .image {
      top: 1.25rem;
    }
    & .image {
      left: 1.25rem;
    }
    & .image {
      display: flex;
    }
    & .image {
      width: 60px;
      height: 60px;
    }
    & .image {
      align-items: center;
    }
    & .image {
      justify-content: center;
    }
    & .image {
      overflow: hidden;
    }
    & .image {
      border-radius: 9999px;
    }
    & .image {
      background-color: rgba(var(--iconBg));
    }
    @media (min-width: 1024px) {
      & .image {
        width: 5rem;
        height: 5rem;
      }
    }
    & .image {
      @media not all and (min-width: 1024px) {
        & img {
          width: 33px;
        }
      }
    }
    & h1 {
      line-height: 20px;
      font-size: 20px;
    }
    & h1 {
      margin-bottom: 1.25rem;
    }
    & h1 {
      font-weight: 700;
    }
    & h1 {
      text-transform: uppercase;
    }
    & h1 {
      color: rgba(var(--dark));
    }
    @media (min-width: 1024px) {
      & h1 {
        line-height: 26px;
        font-size: 26px;
      }
    }
    @media (min-width: 1024px) {
      & h1 {
        margin-bottom: 2.5rem;
      }
    }
    & ul {
      line-height: 16px;
      font-size: 16px;
    }
    & ul {
      margin-left: 15px;
    }
    & ul {
      margin-bottom: 2.5rem;
    }
    & ul {
      display: flex;
    }
    & ul {
      list-style-type: disc;
    }
    & ul {
      flex-direction: column;
    }
    & ul {
      gap: 0.5rem;
    }
    & ul {
      font-family: Play;
    }
    & ul {
      line-height: 18px;
    }
    &:nth-child(odd) {
      background-color: rgba(var(--light));
    }
    &:nth-child(even) {
      background-color: rgba(var(--extraLight));
    }
  }
}

.trainersBlock {
  display: flex;
  flex-direction: column;
  padding-top: 120px;
  padding-bottom: 120px;
  text-transform: uppercase;
  & p {
    line-height: 16px;
    font-size: 16px;
  }
  & p {
    margin-bottom: 30px;
  }
  & p {
    text-align: center;
  }
  & p {
    font-family: Play;
  }
  & p {
    color: rgba(var(--dark));
  }
  @media (min-width: 1024px) {
    & p {
      line-height: 18px;
      font-size: 18px;
    }
  }
  & h1 {
    line-height: 26px;
    font-size: 26px;
  }
  & h1 {
    margin-bottom: 50px;
  }
  & h1 {
    text-align: center;
  }
  & h1 {
    font-weight: 700;
  }
  & h1 {
    color: rgba(var(--dark));
  }
  @media (min-width: 1024px) {
    & h1 {
      line-height: 50px;
      font-size: 50px;
    }
  }
}

.caruselContainer {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 50px;
  display: grid;
  width: 100vw;
  align-items: center;
  overflow: hidden;
}

@media not all and (min-width: 1280px) {
  .caruselContainer {
    margin-left: -15px;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 15px;
  }
}

@media (min-width: 1280px) {
  .caruselContainer {
    width: 100%;
    grid-auto-flow: column;
    justify-content: space-between;
  }
}

.caruselContainer {
  & button {
    display: flex;
  }
  & button {
    width: 2.5rem;
    height: 2.5rem;
  }
  & button {
    align-items: center;
  }
  & button {
    justify-content: center;
  }
  & button {
    border-radius: 9999px;
  }
  & button {
    background-color: rgba(var(--dark));
  }
  & button {
    &:active {
      background-color: rgba(var(--dark), 0.7);
    }
  }
  @media not all and (min-width: 1280px) {
    & .prev {
      order: 2;
    }
  }
  @media not all and (min-width: 1280px) {
    & .prev {
      grid-column: span 1 / span 1;
    }
  }
  @media not all and (min-width: 1280px) {
    & .prev {
      justify-self: end;
    }
  }
  @media not all and (min-width: 1280px) {
    & .next {
      order: 3;
    }
  }
  @media not all and (min-width: 1280px) {
    & .next {
      grid-column: span 1 / span 1;
    }
  }
  @media not all and (min-width: 1280px) {
    & .next {
      justify-self: start;
    }
  }
  & .carousel {
    position: relative;
  }
  & .carousel {
    width: 1010px;
  }
  & .carousel {
    overflow: hidden;
  }
  @media not all and (min-width: 1280px) {
    & .carousel {
      order: 1;
    }
  }
  @media not all and (min-width: 1280px) {
    & .carousel {
      grid-column: span 2 / span 2;
    }
  }
  @media not all and (min-width: 1280px) {
    & .carousel {
      justify-self: center;
    }
  }
  @media (min-width: 1280px) {
    & .carousel {
      width: 1160px;
    }
  }
  & .carousel {
    & .innerContainer {
      display: flex;
    }
    & .innerContainer {
      width: 1010px;
    }
    & .innerContainer {
      --tw-translate-x: 0px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    & .innerContainer {
      gap: 10px;
    }
    @media (min-width: 1280px) {
      & .innerContainer {
        width: 1160px;
      }
    }
    & .caruselItem {
      height: 490px;
    }
    & .caruselItem {
      width: 330px;
    }
    & .caruselItem {
      border-radius: 50px;
    }
    & .caruselItem {
      background-color: rgba(var(--personCardBg));
    }
    & .caruselItem {
      padding: 10px;
    }
    @media (min-width: 1280px) {
      & .caruselItem {
        height: 560px;
      }
    }
    @media (min-width: 1280px) {
      & .caruselItem {
        width: 380px;
      }
    }
    & .caruselItem {
      & h1 {
        line-height: 22px;
        font-size: 22px;
      }
      & h1 {
        margin-bottom: 1.25rem;
      }
      & h1 {
        padding-left: 1.25rem;
      }
      & h1 {
        text-align: left;
      }
      & h1 {
        font-weight: 700;
      }
      & h1 {
        text-transform: uppercase;
      }
      & h1 {
        color: rgba(var(--dark));
      }
      @media (min-width: 1280px) {
        & h1 {
          line-height: 26px;
          font-size: 26px;
        }
      }
      & p {
        line-height: 16px;
        font-size: 16px;
      }
      & p {
        width: 330px;
      }
      & p {
        padding-left: 1.25rem;
        padding-right: 1.25rem;
      }
      & p {
        text-align: left;
      }
      & p {
        font-family: Play;
      }
      & p {
        text-transform: uppercase;
      }
      & p {
        color: rgba(var(--dark));
      }
      & .image {
        margin-bottom: 2.5rem;
      }
      & .image {
        width: 310px;
        height: 310px;
      }
      & .image {
        overflow: hidden;
      }
      & .image {
        border-radius: 40px;
      }
      & .image {
        background-color: rgba(var(--personalCardInnerBg));
      }
      & .image {
        background-size: cover;
      }
      @media (min-width: 1280px) {
        & .image {
          width: 360px;
          height: 360px;
        }
      }
    }
  }
}

.carouselSingleArrows {
  margin-left: auto;
  margin-right: auto;
  margin-top: 60px;
  display: grid;
  width: 100vw;
  align-items: center;
  gap: 1.25rem;
  overflow: hidden;
}

@media not all and (min-width: 1280px) {
  .carouselSingleArrows {
    margin-left: -15px;
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 1280px) {
  .carouselSingleArrows {
    width: 100%;
    grid-auto-flow: column;
    justify-content: center;
  }
}

.carouselSingleArrows {
  & button {
    display: flex;
  }
  & button {
    width: 2.5rem;
    height: 2.5rem;
  }
  & button {
    align-items: center;
  }
  & button {
    justify-content: center;
  }
  & button {
    border-radius: 9999px;
  }
  & button {
    background-color: rgba(var(--dark));
  }
  & button {
    &:active {
      background-color: rgba(var(--dark), 0.7);
    }
  }
  @media not all and (min-width: 1280px) {
    & .prev {
      order: 2;
    }
  }
  @media not all and (min-width: 1280px) {
    & .prev {
      grid-column: span 1 / span 1;
    }
  }
  @media not all and (min-width: 1280px) {
    & .prev {
      justify-self: end;
    }
  }
  @media not all and (min-width: 1280px) {
    & .next {
      order: 3;
    }
  }
  @media not all and (min-width: 1280px) {
    & .next {
      grid-column: span 1 / span 1;
    }
  }
  @media not all and (min-width: 1280px) {
    & .next {
      justify-self: start;
    }
  }
  & .carousel {
    position: relative;
  }
  & .carousel {
    height: 330px;
  }
  & .carousel {
    width: 100%;
  }
  @media not all and (min-width: 1280px) {
    & .carousel {
      order: 1;
    }
  }
  @media not all and (min-width: 1280px) {
    & .carousel {
      grid-column: span 2 / span 2;
    }
  }
  @media not all and (min-width: 1280px) {
    & .carousel {
      justify-self: center;
    }
  }
  @media (min-width: 1024px) {
    & .carousel {
      height: 600px;
    }
  }
  @media (min-width: 1024px) {
    & .carousel {
      width: 900px;
    }
  }
  & .carousel {
    & .dots {
      position: absolute;
    }
    & .dots {
      bottom: 1rem;
    }
    & .dots {
      left: 50%;
    }
    & .dots {
      display: flex;
    }
    & .dots {
      --tw-translate-x: -50%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    & .dots {
      gap: 0.5rem;
    }
    & .dot {
      width: 10px;
      height: 10px;
    }
    & .dot {
      cursor: pointer;
    }
    & .dot {
      border-radius: 9999px;
    }
    & .dot {
      background-color: rgba(var(--light));
    }
    & .dot {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & .dot {
      transition-duration: 300ms;
    }
    & .dot {
      &.active {
        background-color: rgba(var(--font2));
      }
      &.active {
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      &.active {
        transition-duration: 300ms;
      }
    }
    & .image {
      position: absolute;
    }
    & .image {
      top: 0px;
    }
    & .image {
      left: 0px;
    }
    & .image {
      height: 330px;
    }
    & .image {
      width: 100%;
    }
    & .image {
      background-size: cover;
    }
    & .image {
      background-position: center;
    }
    & .image {
      opacity: 0;
    }
    & .image {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & .image {
      transition-duration: 300ms;
    }
    @media (min-width: 1024px) {
      & .image {
        height: 600px;
      }
    }
    @media (min-width: 1024px) {
      & .image {
        width: 900px;
      }
    }
    @media (min-width: 1024px) {
      & .image {
        border-radius: 42px;
      }
    }
    & .image {
      &.active {
        opacity: 1;
      }
      &.active {
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      &.active {
        transition-duration: 300ms;
      }
    }
  }
}

.startRightNow {
  position: relative;
  display: flex;
  overflow: hidden;
  background-color: rgba(var(--dark));
  padding-top: 5rem;
  padding-bottom: 72px;
  text-transform: uppercase;
}

@media not all and (min-width: 1024px) {
  .startRightNow {
    margin-left: -15px;
    width: 100vw;
    flex-direction: column;
  }
}

@media (min-width: 1024px) {
  .startRightNow {
    border-radius: 50px;
    padding-top: 120px;
  }
}

.startRightNow {
  & .title {
    font-weight: 700;
  }
  @media not all and (min-width: 1024px) {
    & .title {
      margin-bottom: 30px;
    }
  }
  @media not all and (min-width: 1024px) {
    & .title {
      padding-left: 25px;
      padding-right: 25px;
    }
  }
  @media (min-width: 1024px) {
    & .title {
      width: 50%;
    }
  }
  @media (min-width: 1024px) {
    & .title {
      padding-left: 120px;
    }
  }
  & .title {
    & h1 {
      line-height: 28px;
      font-size: 28px;
    }
    & h1 {
      margin-bottom: 30px;
    }
    & h1 {
      font-weight: 700;
    }
    & h1 {
      color: rgba(var(--mainBg));
    }
    @media (min-width: 1024px) {
      & h1 {
        line-height: 50px;
        font-size: 50px;
      }
    }
    & p {
      line-height: 20px;
      font-size: 20px;
    }
    & p {
      color: rgba(var(--font2));
    }
    @media not all and (min-width: 1024px) {
      & p {
        font-weight: 700;
      }
    }
  }
  & .form {
    display: flex;
  }
  & .form {
    flex-direction: column;
  }
  & .form {
    align-items: center;
  }
  & .form {
    justify-content: center;
  }
  @media not all and (min-width: 1024px) {
    & .form {
      padding-left: 25px;
      padding-right: 25px;
    }
  }
  @media (min-width: 1024px) {
    & .form {
      width: 50%;
    }
  }
  & .form {
    & form {
      position: relative;
    }
    & form {
      margin-bottom: 1.25rem;
    }
    & form {
      display: flex;
    }
    & form {
      flex-direction: column;
    }
    @media (min-width: 1024px) {
      & form {
        width: 460px;
      }
    }
    & form {
      & input {
        line-height: 18px;
        font-size: 18px;
      }
      & input {
        margin-bottom: 20px;
      }
      & input {
        height: 5rem;
      }
      & input {
        width: 100%;
      }
      & input {
        border-radius: 50px;
      }
      & input {
        border-width: 1px;
      }
      & input {
        border-color: rgba(var(--font2));
      }
      & input {
        background-color: rgba(var(--font2));
      }
      & input {
        padding-top: 10px;
        padding-bottom: 10px;
      }
      & input {
        padding-left: 2.5rem;
        padding-right: 2.5rem;
      }
      & input {
        font-weight: 700;
      }
      & input {
        color: rgba(var(--dark)) !important;
      }
      & input {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      & input {
        &::-moz-placeholder {
          line-height: 18px;
          font-size: 18px;
        }
        &::placeholder {
          line-height: 18px;
          font-size: 18px;
        }
        &::-moz-placeholder {
          font-weight: 700;
        }
        &::placeholder {
          font-weight: 700;
        }
        &::-moz-placeholder {
          color: rgba(var(--dark)) !important;
        }
        &::placeholder {
          color: rgba(var(--dark)) !important;
        }
      }
    }
  }
}

input::-moz-placeholder {
  color: rgb(var(--dark));
}

input::placeholder {
  color: rgb(var(--dark));
}

.carouselSingleContainer {
  position: relative;
  & .dots {
    position: absolute;
  }
  & .dots {
    bottom: 1rem;
  }
  & .dots {
    left: 50%;
  }
  & .dots {
    display: flex;
  }
  & .dots {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  & .dots {
    gap: 0.5rem;
  }
  & .dot {
    width: 10px;
    height: 10px;
  }
  & .dot {
    cursor: pointer;
  }
  & .dot {
    border-radius: 9999px;
  }
  & .dot {
    background-color: rgba(var(--light));
  }
  & .dot {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  & .dot {
    transition-duration: 300ms;
  }
  & .dot {
    &.active {
      background-color: rgba(var(--font2));
    }
    &.active {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    &.active {
      transition-duration: 300ms;
    }
  }
  & .carousel {
    position: relative;
  }
  & .carousel {
    height: 310px;
  }
  & .carousel {
    width: 100%;
  }
  & .carousel {
    overflow: hidden;
  }
  & .carousel {
    border-radius: 42px;
  }
  @media (min-width: 768px) {
    & .carousel {
      height: 670px;
    }
  }
  & .carousel {
    & .carouselItem {
      position: absolute;
    }
    & .carouselItem {
      height: 100%;
    }
    & .carouselItem {
      width: 100%;
    }
    & .carouselItem {
      background-size: cover;
    }
    & .carouselItem {
      background-position: center;
    }
    & .carouselItem {
      background-repeat: no-repeat;
    }
    & .carouselItem {
      opacity: 0;
    }
    & .carouselItem {
      transition-property: opacity;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & .carouselItem {
      transition-duration: 300ms;
    }
    & .carouselItem {
      &.active {
        opacity: 1;
      }
      &.active {
        transition-property: opacity;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      &.active {
        transition-duration: 300ms;
      }
    }
  }
}

.trainersCard {
  height: 490px;
  width: 330px;
  border-radius: 50px;
  background-color: rgba(var(--personCardBg));
  padding: 10px;
}

@media (min-width: 1280px) {
  .trainersCard {
    height: 560px;
    width: 380px;
  }
}

.trainersCard {
  & h1 {
    line-height: 22px;
    font-size: 22px;
  }
  & h1 {
    margin-bottom: 1.25rem;
  }
  & h1 {
    padding-left: 1.25rem;
  }
  & h1 {
    text-align: left;
  }
  & h1 {
    font-weight: 700;
  }
  & h1 {
    text-transform: uppercase;
  }
  & h1 {
    color: rgba(var(--dark));
  }
  @media (min-width: 1280px) {
    & h1 {
      line-height: 26px;
      font-size: 26px;
    }
  }
  & p {
    line-height: 16px;
    font-size: 16px;
  }
  & p {
    width: 330px;
  }
  & p {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
  & p {
    text-align: left;
  }
  & p {
    font-family: Play;
  }
  & p {
    text-transform: uppercase;
  }
  & p {
    color: rgba(var(--dark));
  }
  & .image {
    margin-bottom: 2.5rem;
  }
  & .image {
    width: 310px;
    height: 310px;
  }
  & .image {
    overflow: hidden;
  }
  & .image {
    border-radius: 40px;
  }
  & .image {
    background-color: rgba(var(--personalCardInnerBg));
  }
  & .image {
    background-size: cover;
  }
  @media (min-width: 1280px) {
    & .image {
      width: 360px;
      height: 360px;
    }
  }
}

.selectBtn {
  position: relative;
  height: 60px;
  cursor: pointer;
  border-radius: 30px;
  border-width: 2px;
  border-color: rgba(var(--font2));
  padding: 20px;
  padding-left: 2rem;
  padding-right: 2rem;
  text-transform: uppercase;
  color: rgba(var(--dark));
  transition-property: height,background;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.selectBtn:hover {
  background-color: rgba(var(--font2));
}

.selectBtn {
  & .options {
    line-height: 12px;
    font-size: 12px;
  }
  & .options {
    position: absolute;
  }
  & .options {
    z-index: 20;
  }
  & .options {
    display: flex;
  }
  & .options {
    flex-direction: column;
  }
  & .options {
    opacity: 0;
  }
  & .options {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  & .options {
    transition-duration: 300ms;
  }
  & .options {
    & .option {
      border-radius: 5px;
    }
    & .option {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
    }
    & .option {
      text-align: left;
    }
    & .option {
      text-transform: uppercase;
    }
    & .option {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & .option {
      transition-duration: 300ms;
    }
    & .option:hover {
      --tw-scale-x: 1.05;
      --tw-scale-y: 1.05;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    @media (min-width: 768px) {
      & .option {
        padding-top: 0.25rem;
        padding-bottom: 0.25rem;
      }
    }
  }
  &.active {
    height: 160px;
  }
  &.active {
    transition-property: height;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &.active {
    transition-duration: 300ms;
  }
  @media (min-width: 768px) {
    &.active {
      height: 150px;
    }
  }
  &.active {
    & svg {
      --tw-rotate: 180deg;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    & svg {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & svg {
      transition-duration: 300ms;
    }
    & .options {
      opacity: 1;
    }
    & .options {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    & .options {
      transition-duration: 300ms;
    }
  }
}

.modal {
  pointer-events: none;
  position: fixed;
  top: 0px;
  left: 0px;
  z-index: 50;
  display: flex;
  height: 0px;
  width: 0px;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  background-color: rgb(0 0 0 / 0.5);
  opacity: 0;
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  & .content {
    position: relative;
  }
  & .content {
    width: 100%;
    height: 100%;
  }
  & .content {
    background-color: rgba(var(--extraLight));
  }
  & .content {
    padding: 10px;
  }
  & .content {
    padding-bottom: 34px;
  }
  & .content {
    text-transform: uppercase;
  }
  @media (min-width: 768px) {
    & .content {
      width: -moz-fit-content;
      width: fit-content;
      height: -moz-fit-content;
      height: fit-content;
    }
  }
  @media (min-width: 768px) {
    & .content {
      border-radius: 50px;
    }
  }
  & .content {
    & .mainText {
      line-height: 20px;
      font-size: 20px;
    }
    & .mainText {
      margin-bottom: 1.25rem;
    }
    & .mainText {
      text-align: center;
    }
    & .mainText {
      font-weight: 700;
    }
    & .mainText {
      color: rgba(var(--dark));
    }
    @media (min-width: 768px) {
      & .mainText {
        line-height: 30px;
        font-size: 30px;
      }
    }
    & .legalText {
      line-height: 13px;
      font-size: 13px;
    }
    & .legalText {
      text-align: center;
    }
    & .legalText {
      font-family: Play;
    }
    & .legalText {
      line-height: 14px;
    }
    & .legalText {
      color: rgba(var(--dark));
    }
    @media (min-width: 768px) {
      & .legalText {
        width: 460px;
      }
    }
    & form {
      position: relative;
    }
    & form {
      margin-bottom: 10px;
    }
    & form {
      display: flex;
    }
    & form {
      flex-direction: column;
    }
    @media (min-width: 768px) {
      & form {
        width: 460px;
      }
    }
    @media (min-width: 1024px) {
      & form {
        margin-bottom: 1.25rem;
      }
    }
    & form {
      & input {
        line-height: 16px;
        font-size: 16px;
      }
      & input {
        margin-bottom: 10px;
      }
      & input {
        height: 5rem;
      }
      & input {
        width: 100%;
      }
      & input {
        border-radius: 50px;
      }
      & input {
        background-color: rgba(var(--light));
      }
      & input {
        padding-top: 10px;
        padding-bottom: 10px;
      }
      & input {
        padding-left: 2.5rem;
        padding-right: 2.5rem;
      }
      & input {
        font-weight: 700;
      }
      & input {
        color: rgba(var(--dark)) !important;
      }
      & input {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      & input::-moz-placeholder {
        line-height: 16px;
        font-size: 16px;
      }
      & input::placeholder {
        line-height: 16px;
        font-size: 16px;
      }
      @media (min-width: 768px) {
        & input {
          line-height: 18px;
          font-size: 18px;
        }
      }
      @media (min-width: 768px) {
        & input::-moz-placeholder {
          line-height: 18px;
          font-size: 18px;
        }
        & input::placeholder {
          line-height: 18px;
          font-size: 18px;
        }
      }
      & input::-moz-placeholder {
        font-weight: 700;
      }
      & input::placeholder {
        font-weight: 700;
      }
      & input::-moz-placeholder {
        color: rgba(var(--dark)) !important;
      }
      & input::placeholder {
        color: rgba(var(--dark)) !important;
      }
      @media (min-width: 1024px) {
        & input {
          margin-bottom: 20px;
        }
      }
    }
    & .image {
      position: relative;
    }
    & .image {
      margin-bottom: 2.5rem;
    }
    & .image {
      display: flex;
    }
    & .image {
      height: 344px;
    }
    & .image {
      align-items: flex-end;
    }
    & .image {
      justify-content: center;
    }
    & .image {
      border-radius: 42px;
    }
    & .image {
      background-image: url('./assets/main-basics-2.png');
    }
    & .image {
      background-size: cover;
    }
    & .image {
      background-position: center;
    }
    & .image {
      padding: 28px;
    }
    @media (min-width: 768px) {
      & .image {
        width: 660px;
      }
    }
    & .image {
      & .imageInner {
        position: absolute;
      }
      & .imageInner {
        top: 0px;
      }
      & .imageInner {
        left: 0px;
      }
      & .imageInner {
        z-index: 10;
      }
      & .imageInner {
        width: 100%;
        height: 100%;
      }
      & .imageInner {
        border-radius: 42px;
      }
      & .imageInner {
        background-image: linear-gradient(180deg, rgba(46, 46, 45, 0.2) 0%, rgba(46, 46, 45, 1) 100%);
      }
      & .imageText {
        line-height: 20px;
        font-size: 20px;
      }
      & .imageText {
        z-index: 20;
      }
      & .imageText {
        text-align: center;
      }
      & .imageText {
        font-weight: 700;
      }
      & .imageText {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity));
      }
      @media (min-width: 768px) {
        & .imageText {
          line-height: 40px;
          font-size: 40px;
        }
      }
    }
    & .cross {
      position: absolute;
    }
    & .cross {
      top: 30px;
    }
    & .cross {
      right: 30px;
    }
    & .cross {
      z-index: 30;
    }
    & .cross {
      width: 1.25rem;
      height: 1.25rem;
    }
    & .cross {
      background-image: url('./assets/icons/cross.svg');
    }
    & .cross {
      background-size: cover;
    }
    & .cross {
      background-position: center;
    }
  }
  &.active {
    pointer-events: auto;
  }
  &.active {
    opacity: 1;
  }
  &.active {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &.active {
    transition-duration: 300ms;
  }
}

.contactsCard {
  height: -moz-fit-content;
  height: fit-content;
  width: 100%;
  border-radius: 50px;
  border-width: 2px;
  border-color: rgba(var(--font2));
  padding-left: 37px;
  padding-right: 37px;
  padding-top: 60px;
  padding-bottom: 1.25rem;
}

@media (min-width: 1024px) {
  .contactsCard {
    height: 500px;
    width: 575px;
  }
}

.contactsCard {
  &.active {
    border-style: none;
  }
  &.active {
    background-color: rgba(var(--light));
  }
}

@media (min-width: 640px) {
  .sm\:container {
    width: 100%;
  }

  @media (min-width: 640px) {
    .sm\:container {
      max-width: 640px;
    }
  }

  @media (min-width: 768px) {
    .sm\:container {
      max-width: 768px;
    }
  }

  @media (min-width: 1024px) {
    .sm\:container {
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px) {
    .sm\:container {
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px) {
    .sm\:container {
      max-width: 1536px;
    }
  }
}

@media (min-width: 768px) {
  .md\:text18 {
    line-height: 18px;
    font-size: 18px;
  }
}

@media (min-width: 1024px) {
  .lg\:text50 {
    line-height: 50px;
    font-size: 50px;
  }

  .lg\:text40 {
    line-height: 40px;
    font-size: 40px;
  }

  .lg\:text30 {
    line-height: 30px;
    font-size: 30px;
  }

  .lg\:text26 {
    line-height: 26px;
    font-size: 26px;
  }

  .lg\:text20 {
    line-height: 20px;
    font-size: 20px;
  }

  .lg\:text18 {
    line-height: 18px;
    font-size: 18px;
  }

  .lg\:text16 {
    line-height: 16px;
    font-size: 16px;
  }
}

.hover\:bg-dark:hover {
  background-color: rgba(var(--dark));
}

.hover\:bg-directionsColor1:hover {
  background-color: rgba(var(--directionsColor1));
}

.hover\:bg-extraLight:hover {
  background-color: rgba(var(--extraLight));
}

.hover\:bg-font2:hover {
  background-color: rgba(var(--font2));
}

.hover\:bg-transparent:hover {
  background-color: transparent;
}

.hover\:font-bold:hover {
  font-weight: 700;
}

.hover\:\!text-dark:hover {
  color: rgba(var(--dark)) !important;
}

.hover\:text-dark:hover {
  color: rgba(var(--dark));
}

.hover\:text-font2:hover {
  color: rgba(var(--font2));
}

.before\:hover\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.hover\:before\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.focus\:hover\:text-center:hover:focus {
  text-align: center;
}

.hover\:focus\:text-center:focus:hover {
  text-align: center;
}

.group:hover .group-hover\:bg-dark {
  background-color: rgba(var(--dark));
}

.group:hover .group-hover\:bg-font2 {
  background-color: rgba(var(--font2));
}

.group:hover .group-hover\:bg-\[image\:none\] {
  background-image: none;
}

.group:hover .group-hover\:fill-dark {
  fill: rgba(var(--dark));
}

.group:hover .group-hover\:text-dark {
  color: rgba(var(--dark));
}

.group\/main.active .group-\[\.active\]\/main\:fill-light {
  fill: rgba(var(--light));
}

@media not all and (min-width: 1280px) {
  .max-xl\:pb-10 {
    padding-bottom: 2.5rem;
  }
}

@media not all and (min-width: 1024px) {
  .max-lg\:bottom-0 {
    bottom: 0px;
  }

  .max-lg\:bottom-\[-200px\] {
    bottom: -200px;
  }

  .max-lg\:top-auto {
    top: auto;
  }

  .max-lg\:order-3 {
    order: 3;
  }

  .max-lg\:order-4 {
    order: 4;
  }

  .max-lg\:-ml-\[15px\] {
    margin-left: -15px;
  }

  .max-lg\:ml-\[-15px\] {
    margin-left: -15px;
  }

  .max-lg\:mt-10 {
    margin-top: 2.5rem;
  }

  .max-lg\:hidden {
    display: none;
  }

  .max-lg\:h-\[330px\] {
    height: 330px;
  }

  .max-lg\:w-screen {
    width: 100vw;
  }

  .max-lg\:\!rotate-45 {
    --tw-rotate: 45deg !important;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  }

  .max-lg\:flex-col {
    flex-direction: column;
  }

  .max-lg\:items-center {
    align-items: center;
  }

  .max-lg\:text-center {
    text-align: center;
  }
}

@media not all and (min-width: 768px) {
  .max-md\:px-\[30px\] {
    padding-left: 30px;
    padding-right: 30px;
  }
}

@media not all and (min-width: 640px) {
  .max-sm\:absolute {
    position: absolute;
  }

  .max-sm\:bottom-\[100px\] {
    bottom: 100px;
  }

  .max-sm\:w-\[260px\] {
    width: 260px;
  }
}

@media (min-width: 640px) {
  .sm\:underline {
    text-decoration-line: underline;
  }
}

@media (min-width: 768px) {
  .md\:top-\[1\.5px\] {
    top: 1.5px;
  }

  .md\:h-\[660px\] {
    height: 660px;
  }

  .md\:font-euro {
    font-family: Eurofontextendedc;
  }
}

@media (min-width: 1024px) {
  .lg\:right-\[-150px\] {
    right: -150px;
  }

  .lg\:right-\[100px\] {
    right: 100px;
  }

  .lg\:order-2 {
    order: 2;
  }

  .lg\:order-3 {
    order: 3;
  }

  .lg\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .lg\:mb-8 {
    margin-bottom: 2rem;
  }

  .lg\:mb-\[100px\] {
    margin-bottom: 100px;
  }

  .lg\:mb-\[107px\] {
    margin-bottom: 107px;
  }

  .lg\:mb-\[135px\] {
    margin-bottom: 135px;
  }

  .lg\:mb-\[139px\] {
    margin-bottom: 139px;
  }

  .lg\:mb-\[18px\] {
    margin-bottom: 18px;
  }

  .lg\:mb-\[25px\] {
    margin-bottom: 25px;
  }

  .lg\:mb-\[38px\] {
    margin-bottom: 38px;
  }

  .lg\:mb-\[52px\] {
    margin-bottom: 52px;
  }

  .lg\:mb-\[70px\] {
    margin-bottom: 70px;
  }

  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:size-fit {
    width: -moz-fit-content;
    width: fit-content;
    height: -moz-fit-content;
    height: fit-content;
  }

  .lg\:h-\[440px\] {
    height: 440px;
  }

  .lg\:h-\[660px\] {
    height: 660px;
  }

  .lg\:h-full {
    height: 100%;
  }

  .lg\:w-1\/2 {
    width: 50%;
  }

  .lg\:w-2\/3 {
    width: 66.666667%;
  }

  .lg\:w-\[1150px\] {
    width: 1150px;
  }

  .lg\:w-\[142px\] {
    width: 142px;
  }

  .lg\:w-\[180px\] {
    width: 180px;
  }

  .lg\:w-\[35\%\] {
    width: 35%;
  }

  .lg\:w-\[360px\] {
    width: 360px;
  }

  .lg\:w-\[369px\] {
    width: 369px;
  }

  .lg\:w-\[460px\] {
    width: 460px;
  }

  .lg\:w-\[565px\] {
    width: 565px;
  }

  .lg\:w-\[65\%\] {
    width: 65%;
  }

  .lg\:w-\[655px\] {
    width: 655px;
  }

  .lg\:-scale-x-100 {
    --tw-scale-x: -1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .lg\:flex-row-reverse {
    flex-direction: row-reverse;
  }

  .lg\:justify-start {
    justify-content: flex-start;
  }

  .lg\:justify-center {
    justify-content: center;
  }

  .lg\:justify-between {
    justify-content: space-between;
  }

  .lg\:gap-\[10px\] {
    gap: 10px;
  }

  .lg\:gap-\[50px\] {
    gap: 50px;
  }

  .lg\:gap-\[90px\] {
    gap: 90px;
  }

  .lg\:rounded-\[50px\] {
    border-radius: 50px;
  }

  .lg\:bg-\[size\:110\%\] {
    background-size: 110%;
  }

  .lg\:bg-\[size\:120\%\] {
    background-size: 120%;
  }

  .lg\:bg-\[position\:-40px_-60px\] {
    background-position: -40px -60px;
  }

  .lg\:bg-\[position\:-45px_-55px\] {
    background-position: -45px -55px;
  }

  .lg\:bg-\[position\:-45px_0px\] {
    background-position: -45px 0px;
  }

  .lg\:bg-\[position\:-5px_-45px\] {
    background-position: -5px -45px;
  }

  .lg\:px-\[105px\] {
    padding-left: 105px;
    padding-right: 105px;
  }

  .lg\:py-\[70px\] {
    padding-top: 70px;
    padding-bottom: 70px;
  }

  .lg\:py-\[71px\] {
    padding-top: 71px;
    padding-bottom: 71px;
  }

  .lg\:pt-\[108px\] {
    padding-top: 108px;
  }

  .lg\:pt-\[132px\] {
    padding-top: 132px;
  }

  .lg\:pt-\[60px\] {
    padding-top: 60px;
  }
}

@media (min-width: 1280px) {
  .xl\:w-1\/2 {
    width: 50%;
  }

  .xl\:justify-between {
    justify-content: space-between;
  }

  .xl\:pr-\[70px\] {
    padding-right: 70px;
  }
}

@media (prefers-color-scheme: dark) {
  @media (min-width: 1024px) {
    .dark\:lg\:hover\:\[paint-order\:markers\]:hover {
      paint-order: markers;
    }
  }
}
